CREATE TABLE category (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE comment (id BIGINT AUTO_INCREMENT, fb_id TEXT NOT NULL, username TEXT NOT NULL, message TEXT NOT NULL, video_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX video_id_idx (video_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE commentaire (id BIGINT AUTO_INCREMENT, message TEXT NOT NULL, user_id BIGINT NOT NULL, video_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX video_id_idx (video_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE config (id BIGINT AUTO_INCREMENT, name TEXT NOT NULL, content TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE facebook_profile (id BIGINT NOT NULL, access_token VARCHAR(100), user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id)) ENGINE = INNODB;
CREATE TABLE friteuse (id BIGINT AUTO_INCREMENT, title TEXT NOT NULL, image TEXT, code TEXT, type VARCHAR(10), nbvue BIGINT DEFAULT 0, slug TEXT, user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE images (id BIGINT AUTO_INCREMENT, name TEXT NOT NULL, priority TEXT NOT NULL, video_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX video_id_idx (video_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE search (id BIGINT AUTO_INCREMENT, content TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE twitter_profile (id BIGINT NOT NULL, username VARCHAR(100), access_token VARCHAR(100), access_token_secret VARCHAR(100), user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id)) ENGINE = INNODB;
CREATE TABLE user_like_friteuse (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, friteuse_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX friteuse_id_idx (friteuse_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_like_video (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, video_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX video_id_idx (video_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_view_friteuse (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, friteuse_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX friteuse_id_idx (friteuse_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_view_video (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, video_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), INDEX video_id_idx (video_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE video (id BIGINT AUTO_INCREMENT, title TEXT NOT NULL, description TEXT, thumbnail TEXT, code TEXT, nbvue BIGINT DEFAULT 0, nblike BIGINT DEFAULT 0, nbcomment BIGINT DEFAULT 0, mode BIGINT DEFAULT 0, slug TEXT, is_activated BIGINT DEFAULT 0 NOT NULL, category_id BIGINT NOT NULL, user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX category_id_idx (category_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), gender TINYINT, photo TEXT, website VARCHAR(255), city VARCHAR(255), birthday DATE, about TEXT, interest TEXT, comment BIGINT, score BIGINT, facebook_id VARCHAR(255), twitter_id VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), INDEX sf_guard_user_type_idx (type), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), gender TINYINT, photo TEXT, website VARCHAR(255), city VARCHAR(255), birthday DATE, about TEXT, interest TEXT, comment BIGINT, score BIGINT, facebook_id VARCHAR(255), twitter_id VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE comment ADD CONSTRAINT comment_video_id_video_id FOREIGN KEY (video_id) REFERENCES video(id) ON DELETE CASCADE;
ALTER TABLE commentaire ADD CONSTRAINT commentaire_video_id_video_id FOREIGN KEY (video_id) REFERENCES video(id) ON DELETE CASCADE;
ALTER TABLE commentaire ADD CONSTRAINT commentaire_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE facebook_profile ADD CONSTRAINT facebook_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE friteuse ADD CONSTRAINT friteuse_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE images ADD CONSTRAINT images_video_id_video_id FOREIGN KEY (video_id) REFERENCES video(id);
ALTER TABLE twitter_profile ADD CONSTRAINT twitter_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_like_friteuse ADD CONSTRAINT user_like_friteuse_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_like_friteuse ADD CONSTRAINT user_like_friteuse_friteuse_id_friteuse_id FOREIGN KEY (friteuse_id) REFERENCES friteuse(id) ON DELETE CASCADE;
ALTER TABLE user_like_video ADD CONSTRAINT user_like_video_video_id_video_id FOREIGN KEY (video_id) REFERENCES video(id) ON DELETE CASCADE;
ALTER TABLE user_like_video ADD CONSTRAINT user_like_video_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_view_friteuse ADD CONSTRAINT user_view_friteuse_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE user_view_friteuse ADD CONSTRAINT user_view_friteuse_friteuse_id_friteuse_id FOREIGN KEY (friteuse_id) REFERENCES friteuse(id) ON DELETE CASCADE;
ALTER TABLE user_view_video ADD CONSTRAINT user_view_video_video_id_video_id FOREIGN KEY (video_id) REFERENCES video(id) ON DELETE CASCADE;
ALTER TABLE user_view_video ADD CONSTRAINT user_view_video_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE video ADD CONSTRAINT video_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE video ADD CONSTRAINT video_category_id_category_id FOREIGN KEY (category_id) REFERENCES category(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
