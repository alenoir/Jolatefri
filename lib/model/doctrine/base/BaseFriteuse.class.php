<?php

/**
 * BaseFriteuse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $image
 * @property string $code
 * @property string $type
 * @property integer $nbVue
 * @property string $slug
 * @property integer $user_id
 * @property sfGuardUser $User
 * @property Doctrine_Collection $UserViews
 * @property Doctrine_Collection $UserLikes
 * 
 * @method string              getTitle()     Returns the current record's "title" value
 * @method string              getImage()     Returns the current record's "image" value
 * @method string              getCode()      Returns the current record's "code" value
 * @method string              getType()      Returns the current record's "type" value
 * @method integer             getNbVue()     Returns the current record's "nbVue" value
 * @method string              getSlug()      Returns the current record's "slug" value
 * @method integer             getUserId()    Returns the current record's "user_id" value
 * @method sfGuardUser         getUser()      Returns the current record's "User" value
 * @method Doctrine_Collection getUserViews() Returns the current record's "UserViews" collection
 * @method Doctrine_Collection getUserLikes() Returns the current record's "UserLikes" collection
 * @method Friteuse            setTitle()     Sets the current record's "title" value
 * @method Friteuse            setImage()     Sets the current record's "image" value
 * @method Friteuse            setCode()      Sets the current record's "code" value
 * @method Friteuse            setType()      Sets the current record's "type" value
 * @method Friteuse            setNbVue()     Sets the current record's "nbVue" value
 * @method Friteuse            setSlug()      Sets the current record's "slug" value
 * @method Friteuse            setUserId()    Sets the current record's "user_id" value
 * @method Friteuse            setUser()      Sets the current record's "User" value
 * @method Friteuse            setUserViews() Sets the current record's "UserViews" collection
 * @method Friteuse            setUserLikes() Sets the current record's "UserLikes" collection
 * 
 * @package    jolatefri
 * @subpackage model
 * @author     Antoine Lenoir
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFriteuse extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('friteuse');
        $this->hasColumn('title', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('image', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('code', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('type', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('nbVue', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('slug', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'Cascade'));

        $this->hasMany('User_view_friteuse as UserViews', array(
             'local' => 'id',
             'foreign' => 'friteuse_id'));

        $this->hasMany('User_like_friteuse as UserLikes', array(
             'local' => 'id',
             'foreign' => 'friteuse_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}