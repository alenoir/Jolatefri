<?php

/**
 * Video
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    jolatefri
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Video extends BaseVideo
{
	private function slug($string)
	{
	    return strtolower(trim(preg_replace('~[^0-9a-z]+~i', '-', html_entity_decode(preg_replace('~&([a-z]{1,2})(?:acute|cedil|circ|grave|lig|orn|ring|slash|th|tilde|uml);~i', '$1', htmlentities($string, ENT_QUOTES, 'UTF-8')), ENT_QUOTES, 'UTF-8')), '-'));
	}

	public function getExcerpt()
	{
		$lg_max = 250;
		$chaine = strip_tags($this->getDescription(ESC_RAW));
		if (strlen($chaine) > $lg_max)
		{
			$chaine = substr($chaine, 0, $lg_max);
			$last_space = strrpos($chaine, " ");
			$chaine = substr($chaine, 0, $last_space)." [...]";
		}
		return $chaine;
	}
	
	public function getSlugTitle()
	{
		return $this->slug($this->getTitle());
	}
	
	public function getLastMod()
	{
		$now   = new DateTime($this->getCreatedAt());
		return $now->format( 'Y-m-d' );
	}
	
	public function getNbCommentaire()
	{
		return Doctrine_Core::getTable('Commentaire')
			->createQuery('c')
			->where('c.video_id = ?', array($this->getId()))
			->count();
	}
	
	public function getTimeRest()
	{
		$this->date;
	}
	
	public function getNbCommentaireString()
	{
		$nbCom = $this->getNbCommentaire();
		
		if($nbCom == 0)
		{
			return 'Pas de commentaire';
		}
		elseif($nbCom == 1)
		{
			return '1 commentaire';
		}
		else
		{
			return $nbCom.' commentaires';
		}
	}
	
	public function getUrlShow($absolute = false)
	{
		$controller = sfContext::getInstance()->getController();
		
		if($this->getSlug())
		{
			$url = $controller->genUrl('@video_show_new?slug='.$this->getSlug().'&category='.$this->getCategory(), ($absolute)?'absolute=true':'');
		}
		else {
			if($this->mode == 4)
				$url = $controller->genUrl('@image_show?id='.$this->getId().'&category='.$this->getCategory().'&title='.$this->slug($this->getTitle()), ($absolute)?'absolute=true':'');
			else
				$url = $controller->genUrl('@video_show?id='.$this->getId().'&category='.$this->getCategory().'&title='.$this->slug($this->getTitle()), ($absolute)?'absolute=true':'');
			
		}
		return $url;
	}
	
	public function getUrlShowCommand()
	{
		if($this->mode == 4)
			$url = '/'.$this->getCategory().'/image/'.$this->getId().'/'.$this->slug($this->getTitle());
		else
			$url = '/'.$this->getCategory().'/video/'.$this->getId().'/'.$this->slug($this->getTitle());
		return $url;
	}
	
	public function getUrlEdit()
	{
		$url = url_for('@video_edit?id='.$this->getId());
		return $url;
	}
	
	public function getOriginalThumbnail()
	{
		if($this->mode == 4)
			$filename = sfConfig::get('sf_upload_dir').'/images/'.$this->getThumbnail();
		else
			$filename = sfConfig::get('sf_upload_dir').'/thumb-video/'.$this->getThumbnail();
		
		if (!file_exists($filename))
		{
			$filename = '/uploads/thumb-video/default.png';
		}
		else
		{
			if($this->mode == 4)	
				$filename = '/uploads/images/'.$this->getThumbnail();
			else
				$filename = '/uploads/thumb-video/'.$this->getThumbnail();
		}
		return $filename; 
	}
	
	public function getSrcThumbnail($w, $h)
	{
		if($this->mode == 4)
			$filename = sfConfig::get('sf_upload_dir').'/images/'.$this->getThumbnail();
		else
			$filename = sfConfig::get('sf_upload_dir').'/thumb-video/'.$this->getThumbnail();
		
		if (!file_exists($filename))
		{
			$filename = '/uploads/thumb-video/default.png';
		}
		else
		{
			if($this->mode == 4)	
				$filename = '/uploads/images/'.$this->getThumbnail();
			else
				$filename = '/uploads/thumb-video/'.$this->getThumbnail();
		}
		return '/scripts/timthumb.php?src='.$filename.'&h='.$h.'&w='.$w.'&zc=1'; 
	}
	
	public function getSrcThumbnailFb()
	{
		return '/scripts/imageFb.php?path='.$this->getThumbnail(); 
	}
	
	public function getTimeLapse()
	{
		$datetime1 = date_create($this->getCreatedAt());
		$datetime2 = date_create('now');
		$interval = date_diff($datetime1, $datetime2);
		if($interval->format('%y'))
		{
			return ' il y a '.$interval->format('%y').' ans';
		}
		elseif($interval->format('%m'))
		{
			return ' il y a '.$interval->format('%m').' mois';
		}
		elseif($interval->format('%d'))
		{
			return ' il y a '.$interval->format('%d').' jours';
		}
		elseif($interval->format('%h'))
		{
			return ' il y a '.$interval->format('%h').' heures';
		}
		elseif($interval->format('%i'))
		{
			return ' il y a '.$interval->format('%i').' minutes';
		}
	}
	
	public function getImages()
	{
		$images = Doctrine_Core::getTable('Images')
      		->createQuery('i')
      		->where('i.video_id = ?', $this->getId())
      		->execute();
		$w = 485;
		$imagesTab = array();
		foreach($images as $image)
		{
			$filename = '/uploads/images/'.$image;
			$imageTab['thumb'] = '/scripts/copiright.php?src='.$image.'&resize=1'; 
			$imageTab['origin'] = $filename; 
			
			$imagesTab[] = $imageTab;
		}	
		return $imagesTab;
	}
	
	public function getLecteurVideo()
	{
		switch($this->getMode())
		{
			case 3:
			case 1:
				/*$youCode = $this->getCode();
				if(preg_match('#(((https?|ftp)://(w{3}\.)?)(?<!www)(\w+-?)*\.([a-z]{2,4})/embed/)([A-Za-z0-9-_]*)#', $this->getCode(), $matches, PREG_OFFSET_CAPTURE))
	 			{
	 				$youCode = $matches[7][0];
					$code = "
					<div id='mediaspace'>JW Player goes here</div>
					<script type='text/javascript'>
					  jwplayer('mediaspace').setup({
					    'flashplayer': '/player.swf',
					    'file': 'http://www.youtube.com/watch?v=".$youCode."',
    					'controlbar': 'over',
					    'width': '635',
					    'height': '500'
					  });
					</script>";
				}
				else {*/
					$code = $this->getCode();
					$code = preg_replace("#width=\"([0-9]+)\"#", 'width="635"', $code);
					$code = preg_replace("#height=\"([0-9]+)\"#", 'height="500"', $code);
				//}	
				break;
			case 2:
				if(strstr($_SERVER['HTTP_USER_AGENT'],'iPhone') || strstr($_SERVER['HTTP_USER_AGENT'],'iPod') || strstr($_SERVER['HTTP_USER_AGENT'],'iPad'))
				{
					$code = '<video src="'.$this->getCode().'" width="635" height="500" controls autobuffer></video>';
					//$code = '<a href="'.$this->getCode().'" title="'.$this->getTitle().'"><img src="'.$this->getSrcThumbnail(600, 500).'" alt="'.$this->getTitle().'" /></a>';
				}
				else
				{
					$code = '<script	type="text/javascript">
							swfobject.registerObject("player","9.0.124","expressInstall.swf");
						</script> 
						<object type="application/x-shockwave-flash" data="/JLTPlayer.swf" width="635" height="500">
							<param name="movie" value="/JLTPlayer.swf" />
							<param name="allowfullscreen" value="true" />
							<param name="allowscriptaccess" value="always" />
							<param name="flashvars" value="videourl='.$this->getCode().'&imgurl=http://www.jolatefri.com'.$this->getSrcThumbnail(635, 500).'&permalink='.$this->getUrlShow(true).'" />
							<p><a href="http://get.adobe.com/flashplayer">Get Flash</a> to see this player.</p>
						</object>';
				}
				break;
			default:
			
				$youCode = $this->getCode();
				if(preg_match('#(((https?|ftp)://(w{3}\.)?)(?<!www)(\w+-?)*\.([a-z]{2,4})/watch\?v=)([A-Za-z0-9-_]*)#', $this->getCode(), $matches, PREG_OFFSET_CAPTURE))
	 			{
	 				$youCode = $matches[7][0];
	 			}	
				//$code = '<object width="635" height="500"><param name="movie" value="http://www.youtube.com/v/'.$youCode.'&hl=fr_FR&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/'.$youCode.'&hl=fr_FR&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="635" height="500"></embed></object>';
				$code = "
					<div id='mediaspace'>JW Player goes here</div>
					<script type='text/javascript'>
					  jwplayer('mediaspace').setup({
					    'flashplayer': '/player.swf',
					    'file': 'http://www.youtube.com/watch?v=".$youCode."',
					    'plugins': 'viral-2',
    					'controlbar': 'over',
					    'width': '635',
					    'height': '500'
					  });
					</script>";
				break;
		}
		return $code; 
	}

	public function updateLuceneIndex()
	{
	  $index = VideoTable::getLuceneIndex();
	 
	  // remove existing entries
	  foreach ($index->find('pk:'.$this->getId()) as $hit)
	  {
	    $index->delete($hit->id);
	  }
	 
	  // don't index expired and non-activated jobs
	  if ($this->getIsActivated() != 1)
	  {
	    return;
	  }
	 
	  $doc = new Zend_Search_Lucene_Document();
	 
	  // store job primary key to identify it in the search results
	  $doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));
	 
	  // index job fields
	  $doc->addField(Zend_Search_Lucene_Field::UnStored('title', $this->getTitle(), 'utf-8'));
	  $doc->addField(Zend_Search_Lucene_Field::UnStored('category', $this->getCategory(), 'utf-8'));
	  $doc->addField(Zend_Search_Lucene_Field::UnStored('description', $this->getDescription(), 'utf-8'));
	 
	  // add job to the index
	  $index->addDocument($doc);
	  $index->commit();
	}
	
	public function getUrlDmCloud()
	{
		$code = $this->getCode();
		$count = preg_match('/src=(["\'])(.*?)\1/', $code, $match);
		if ($count === FALSE) 
		    return 'non';
		else 
		    return $match[2];
	}

	public function save(Doctrine_Connection $conn = null)
	{
		if($this->isNew())
	  		$this->slug = $this->getSlugTitle();
	 
	  	$ret = parent::save($conn);
	 		 	
	  	$this->updateLuceneIndex();
	 
	  	return $ret;
	}
	
	public function delete(Doctrine_Connection $conn = null)
	{
	  $index = VideoTable::getLuceneIndex();
	 
	  foreach ($index->find('pk:'.$this->getId()) as $hit)
	  {
	    $index->delete($hit->id);
	  }
	 
	  return parent::delete($conn);
	}
}
