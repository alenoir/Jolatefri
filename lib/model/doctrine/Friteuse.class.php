<?php

/**
 * Friteuse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    jolatefri
 * @subpackage model
 * @author     Antoine Lenoir
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Friteuse extends BaseFriteuse
{
	private function slug($string)
	{
	    return strtolower(trim(preg_replace('~[^0-9a-z]+~i', '-', html_entity_decode(preg_replace('~&([a-z]{1,2})(?:acute|cedil|circ|grave|lig|orn|ring|slash|th|tilde|uml);~i', '$1', htmlentities($string, ENT_QUOTES, 'UTF-8')), ENT_QUOTES, 'UTF-8')), '-'));
	}
	public function getContent()
	{
	    if($this->getCode())
		{
			$code = $this->getCode(ESC_RAW);
			$code = preg_replace("#width=\"([0-9]+)\"#", 'width="410"', $code);
			$code = preg_replace("#height=\"([0-9]+)\"#", 'height="325"', $code);
			return $code;
		}
		else
		{
			return image_tag('/uploads/friteuse/'.$this->getImage(), 'width=410px');
		}
	}
	
	public function getLastMod()
	{
		$now   = new DateTime($this->getCreatedAt());
		return $now->format( 'Y-m-d' );
	}
	
	public function getFullContent()
	{
	    if($this->getCode())
		{
			$code = $this->getPlayer();
			$code = preg_replace("#width=\"([0-9]+)\"#", 'width="635"', $code);
			$code = preg_replace("#height=\"([0-9]+)\"#", 'height="500"', $code);
			return $code;
				
		}
		else
		{
			return image_tag('/uploads/friteuse/'.$this->getImage(), 'width=635px');
		}
	}
	
	public function getHomePreviewContent()
	{
	    if($this->getCode())
		{
			$code = $this->getCode(ESC_RAW);
			$code = preg_replace("#width=\"([0-9]+)\"#", 'width="270"', $code);
			$code = preg_replace("#height=\"([0-9]+)\"#", 'height="170"', $code);
			return $code;
				
		}
		else
		{
			return image_tag('/uploads/friteuse/'.$this->getImage(), 'width=250px');
		}
	}
	
	public function getUrlShow($absolute = false)
	{
		if($this->getSlug())
		{
			return url_for('@friteuse_show_new?slug='.$this->getSlug(), ($absolute)?'absolute=true':'');
		}
		else {
			return url_for('@friteuse_show?id='.$this->getId().'&title='.$this->slug($this->getTitle()), ($absolute)?'absolute=true':'');
			
		}
		
	}
	
	public function getSrcThumbnail($w, $h)
	{
		
		$filename = sfConfig::get('sf_upload_dir').'/friteuse/'.$this->getImage();
		
		if (!file_exists($filename))
		{
			$filename = '/uploads/thumb-video/default.png';
		}
		else
		{
				$filename = '/uploads/friteuse/'.$this->getImage();
		}
		return '/scripts/timthumb.php?src='.$filename.'&h='.$h.'&w='.$w.'&zc=1'; 
	}
	
	public function getTimeLapse()
	{
		$datetime1 = date_create($this->getUpdatedAt());
		$datetime2 = date_create('now');
		$interval = date_diff($datetime1, $datetime2);
		if($interval->format('%y'))
		{
			return ' il y a '.$interval->format('%y').' ans';
		}
		elseif($interval->format('%m'))
		{
			return ' il y a '.$interval->format('%m').' mois';
		}
		elseif($interval->format('%d'))
		{
			return ' il y a '.$interval->format('%d').' jours';
		}
		elseif($interval->format('%h'))
		{
			return ' il y a '.$interval->format('%h').' heures';
		}
		elseif($interval->format('%i'))
		{
			return ' il y a '.$interval->format('%i').' minutes';
		}
	}

	public function getAuthor()
	{
		return $this->getUser()->getUsername();
	}
	
	public function getAuthorLink()
	{
		return $this->getUser()->getUrlShow();
	}
	
	public function getPlayer()
	{
		return 	'<iframe width="420" height="315" src="http://www.youtube.com/embed/'.$this->getCode().'?wmode=transparent" frameborder="0" allowfullscreen></iframe>';
		
	}
	
	public function save(Doctrine_Connection $conn = null)
	{
		if($this->isNew())
		{
			$this->slug = $this->slug($this->getTitle());
			$user = $this->getUser();
			$user->score = $user->getScore() + 100;
			$user->save();
		}
	  		
		
  		parent::save($conn);
		
		switch($this->getType())
		{
			case 'youtube':
				$urlImage = 'http://img.youtube.com/vi/'.$this->getCode().'/0.jpg';
				$img = sfConfig::get('sf_upload_dir').'/friteuse/'.$this->slug($this->getTitle()).'.jpg';
				file_put_contents($img, file_get_contents($urlImage));
				$this->image = $this->slug($this->getTitle()).'.jpg';
				break;
			case 'images':
				break;
		}
		
		

 		return parent::save($conn);
	}
}
